<!--
  # `atlassian-plugin.xml`

  This file is a manifest of all the components used to describe your add-on's features.
  For information about what Atlassian Connect components are available for use in this file
  visit the [Interactive Descriptor Guide](https://developer.atlassian.com/static/connect).
 -->
<atlassian-plugin key="{{key}}" name="{{name}}" plugins-version="2"
  xmlns="https://ecosystem.atlassian.net/rest/atlassian-connect/1/installer/schema/atlassian-plugin">

  <plugin-info>
    <description>{{description}}</description>
    <version>{{version}}</version>
    <vendor name="{{vendorName}}" url="{{vendorUrl}}"/>
    <!--
      ## Permissions

      Atlassian Connect add-ons have to declare what permissions they need to work. Available permissions
      can be found on the [Interactive Descriptor Guide](https://developer.atlassian.com/static/connect)

      * [JIRA](https://developer.atlassian.com/static/connect/#jira/permissions)
      * [Confluence](https://developer.atlassian.com/static/connect/#confluence/permissions)
     -->
    <permissions>
      <!-- create_oauth_link is required if you want to protect your add-on with OAuth authentication -->
      <permission>create_oauth_link</permission>
      <!-- add additional permissions here, as needed -->
    </permissions>

    {{#if documentationUrl}}
    <param name="documentation.url">{{documentationUrl}}</param>
    {{/if}}
    <param name="configure.url">/plugins/servlet/atlassian-connect/{{key}}/config-page</param>

  </plugin-info>

  <remote-plugin-container key="container" display-url="{{localBaseUrl}}">
    <!--
      ## OAuth Authentication

      To protect your add-on from unauthorized use, we use two-legged OAuth 1.0. Your public-key is already
      set in ./public-key.pem... no need to add it here. At run-time, the publicKey token below will
      be populated with your real public-key.pem.
     -->
    <oauth>
      <public-key>
{{publicKey}}
      </public-key>
    </oauth>
  </remote-plugin-container>

  <!--
    ## Webhooks

    At the moment, Atlassian Connect supports two types of components of which webhooks is one of them.
    The "remote_plugin_enabled" webhook is a special webhook that `atlassian-connect-express` will automatically
    handle for you. When your add-on is enabled inside a JIRA or Confluence host, that host will
    send a POST to your add-on with information about that host (i.e., host clientKey, host public key, etc.).

    If you define your own hooks, you'll need to create POST routes to handle them. For more information on
    the webhooks available, check out the [Interactive Descriptor Guide](https://developer.atlassian.com/static/connect).

    * [JIRA](https://developer.atlassian.com/static/connect#jira/webhook)
    * [Confluence](https://developer.atlassian.com/static/connect#confluence/webhook)
   -->
  <webhook key="enabled" event="remote_plugin_enabled" url="/enabled"/>

  <!--
    ## Pages

    The other type of components Atlassian Connect supports are pages. Pages are UI extension points inside
    of JIRA or Confluence. Currently they're implemented as [seamless iframes](https://developer.atlassian.com/static/connect/#confluence/webhook).
    Some of these page components can be viewed as full pages wrapped with JIRA or Confluence's layout. And others
    might be implemented as smaller web fragments on the page, such as tabs or sidebar panels.

    All of the page components available can be found on the
    [Interactive Descriptor Guide](https://developer.atlassian.com/static/connect) starting with `*-page`.

    * [JIRA](https://developer.atlassian.com/static/connect#jira)
    * [Confluence](https://developer.atlassian.com/static/connect#confluence)
   -->
  <general-page key="hello-world-page-in-jira" name="Hello World" section="system.top.navigation.bar" url="/hello-world">
    <conditions>
        <condition url="/conditions/hello-world"/>
    </conditions>
  </general-page>

  <profile-page key="directory-profile" name="Directory" section="system.top.navigation.bar" url="/profile"/>
  
  <configure-page key="config-page" name="Configuration" url="/hello-world"/>

<!-- 
  <remote-search-request-view key="search-view" name="Remote Search View" url="/search-view">
    <description key="desc">Connect Search View</description>
  </remote-search-request-view>
 -->
</atlassian-plugin>
